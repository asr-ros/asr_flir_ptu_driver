/**
 * PTU_GUI class.
 *
 * @author Valerij Wittenbeck, Pascal Meissner
 * @version See SVN
 */

#ifndef __PTU_GUI__
#define __PTU_GUI__

/**
@file
Subclass of GUIDialog, which is generated by wxFormBuilder.
*/

#include "GUI.h"
#include "ros/ros.h"
#include "sensor_msgs/JointState.h"
#include "sensor_msgs/Image.h"
#include "std_srvs/Empty.h"
#include <wx/wx.h>
#include "asr_flir_ptu_driver/State.h"
#include "asr_flir_ptu_driver/Predict.h"

#define DEFAULT_PREFFEREDLEFT "/left/image_color"
#define DEFAULT_PREFFEREDRIGHT "/right/image_color"

//// end generated include

namespace GUI_PTU {

/** Implementing GUIDialog */
class PTU_GUI : public GUIDialog
{
	private:
		void updatePTUInfo();
		void initTopicList();
		void onUpdate(wxTimerEvent& evt);
		wxBitmap* createBitmap(const sensor_msgs::Image::ConstPtr& msg);
		void onLeftImage(const sensor_msgs::Image::ConstPtr& msg);
		void onRightImage(const sensor_msgs::Image::ConstPtr& msg);
        void onStateCommand(const asr_flir_ptu_driver::State::ConstPtr& msg);
		sensor_msgs::JointState createJointCommand(double pan, double tilt, double panSpeed, double tiltSpeed);
        void updateSlidersFromParamServer();

		ros::NodeHandle nh;
		ros::NodeHandle ptu;
		ros::Publisher jointStatePublisher;
		ros::Subscriber jointStateSubscriber;
		ros::Subscriber leftImageSubscriber;
		ros::Subscriber rightImageSubscriber;
		ros::ServiceClient updater;
        ros::ServiceClient predict_client;
		wxTimer* update_timer;
		std::string ptu_name;
		bool immUpdate;
		bool listenForUpdates;
        int seq_num;
        bool use_path_prediction;

//		const static wxString DEFAULT_PREFFEREDLEFT = wxString::FromUTF8("/left/image_color");
//		const static wxString DEFAULT_PREFFEREDRIGHT = wxString::FromUTF8("/right/image_color");
	protected:
		// Handlers for GUIDialog events.
		void OnDialogClose( wxCloseEvent& event );
		void OnLeftTopicChoice( wxCommandEvent& event );
		void OnRightTopicChoice( wxCommandEvent& event );
		void OnPTUChoice( wxCommandEvent& event );
		void OnPanScroll( wxScrollEvent& event );
		void OnPanSpin( wxSpinEvent& event );
		void OnPanSpinText( wxCommandEvent& event );
		void OnTiltScroll( wxScrollEvent& event );
		void OnTiltSpin( wxSpinEvent& event );
		void OnTiltSpinText( wxCommandEvent& event );
		void OnImmChecked( wxCommandEvent& event );
		void OnListenChecked( wxCommandEvent& event );
		void OnUpdateClicked( wxCommandEvent& event );
	public:
		/** Constructor */
		PTU_GUI( wxWindow* parent );
	//// end generated class members
	
};

}

#endif // __PTU_GUI__
